const fs = require('fs');
const path = require('path');

const photosDir = path.join(process.cwd(), 'public/photos');
const outputPath = path.join(process.cwd(), 'src/lib/photo-list.ts');

function generatePhotoList() {
  try {
    // public/photosディレクトリが存在するかチェック
    if (!fs.existsSync(photosDir)) {
      console.error(`Photos directory not found: ${photosDir}`);
      process.exit(1);
    }

    // 画像ファイルを取得
    const files = fs.readdirSync(photosDir);
    const imageFiles = files.filter((file) =>
      /\.(jpg|jpeg|png|gif|webp)$/i.test(file),
    );

    // ファイル名でソート
    const sortedFiles = imageFiles.sort();

    // TypeScriptファイルの内容を作成
    const tsContent = `// This file is auto-generated by scripts/generate-photo-list.js
// Do not edit this file manually

export interface PhotoList {
  photos: string[];
  generatedAt: string;
}

export const PHOTO_LIST: PhotoList = {
  photos: ${JSON.stringify(sortedFiles, null, 2)},
  generatedAt: '${new Date().toISOString()}',
};

`;

    // 出力ディレクトリを確保
    const outputDir = path.dirname(outputPath);
    if (!fs.existsSync(outputDir)) {
      fs.mkdirSync(outputDir, { recursive: true });
    }

    // TypeScriptファイルに書き込み
    fs.writeFileSync(outputPath, tsContent);

    console.log(`Generated photo list with ${sortedFiles.length} photos`);
    console.log(`Output: ${outputPath}`);
  } catch (error) {
    console.error('Error generating photo list:', error);
    process.exit(1);
  }
}

if (require.main === module) {
  generatePhotoList();
}

module.exports = generatePhotoList;
